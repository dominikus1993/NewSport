@model NewSport.WebApi.Models.PostViewModel

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    function deletePost(data) {
        var objectToDelete = $(this).closest("#post");
        objectToDelete.remove();
        var respContent = "<div class='alert alert-success alert-dismissible' role='alert'>";
        respContent += "<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button><strong>Success!</strong>";
        respContent += "Post został usuniety:[";
        respContent += data.Id + " : ";
        respContent += data.Title + "]</div>";
        $("#deleteMessage").html(respContent);
        

    }
</script>
<h2>@ViewBag.Title</h2>
<div id="deleteMessage"></div>
<p></p>
<div class="row">

    @foreach (var post in Model.Posts)
    {
        <div class="col-md-12" id="post">
            <div class="row">
                <div class="col-md-8">
                    <h4><strong>@Html.ActionLink(@post.Title, "Get", new { post.Id })</strong></h4>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @if (@Html.IsPostHaveImage(post))
                    {
                        <a href="@Url.Action("Get", "Post", new {post.Id})" class="thumbnail">
                            <img src="@Url.Action("GetImage","Post",new{postId = post.Id})" alt="Nope">
                        </a>
                    }

                </div>
                <div class="col-md-8">
                    <p>
                        @Html.DisplayFor(m => post.Text)
                    </p>
                    <p>
                        <div>
                            @Html.ActionLink("Przeczytaj", "Get", new { post.Id }, new { @class = "btn btn-default" })
                            @if (@Html.IsLogged())
                            {
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                        Action <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="#">@Ajax.ActionLink("Delete", "Index", new AjaxOptions() { Url = Url.Action("Delete", "Post", new { post.Id }), Confirm = "Czy napewno chcesz usunac ten post?", OnSuccess = "deletePost" })</a></li>
                                        <li><a href="#">@Html.ActionLink("Edit", "Edit", new { post.Id })</a></li>
                                    </ul>
                                </div>
                            }
                        </div>
                    </p>


                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    <p></p>
                    <p>
                        <i class="glyphicon glyphicon-user"></i> by @Html.ActionLink(post.Author.Username, "Index", new { post.Author.Username, page = 1 })
                        | <i class="glyphicon glyphicon-calendar"></i> @Html.HowMuchTimeHasPassedSinceSbAddedComment(post.Date)
                        | <i class="glyphicon glyphicon-comment"></i> <a href="#">@Html.Action("GetCommentsAmountByPost", "Comment", new { postId = post.Id }) Comments</a>
                    </p>
                </div>
            </div>
        </div>
    }
</div>
<hr>
<div class="pager">
    @Html.PostLinks(Model.PagingInfo, x => Url.Action("Index", new { page = x, username = Model.CurrentUser }))
</div>