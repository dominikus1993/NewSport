@using NewSport.Domain.Entities
@using NewSport.Domain.Entity
@model NewSport.Domain.Entity.Post

@{
    ViewBag.Title = "Get Post";
    AjaxOptions ajaxOptions = new AjaxOptions()
    {
        UpdateTargetId = "comments",
        Url = Url.Action("Add", "Comment", new { postId = Model.Id }),
        LoadingElementId = "loadingComments",
        LoadingElementDuration = 1000,
        Confirm = "Czy chcesz dodac komentarz",
        OnSuccess = "processData"
    };
}

<script type="text/javascript">
    function OnFailure(data) {
        alert(data);
        alert("Dupa");
    }
</script>
@Scripts.Render("~/bundles/comments")
<div class="container">
    <div class="row">
        <div class="col-md-12" id="post">
            <div class="row">
                <div class="col-md-8">
                    <h4><strong>@Html.DisplayFor(m => Model.Title)</strong></h4>
                    <i class="glyphicon glyphicon-user"></i> by @Html.ActionLink(Model.Author.Username, "Index", new { Model.Author.Username, page = 1 })
                    | <i class="glyphicon glyphicon-calendar"></i> @Html.HowMuchTimeHasPassedSinceSbAddedComment(Model.Date)
                </div>

            </div>
            <div class="row">
                <div class="col-md-4">
                    @if (@Html.IsPostHaveImage(Model))
                    {
                        <a href="#" class="thumbnail">
                            <img src="@Url.Action("GetImage","Post",new{postId = Model.Id})" alt="Nope">
                        </a>
                    }

                </div>
                <div class="col-md-8">
                    <p>
                        @Html.DisplayFor(m => Model.Text)
                    </p>
                </div>
            </div>
        </div>
        <div id="loadingComments" class="loadComments" style="display: none">
            <p>Ładowanie danych...</p>
        </div>
        <div id="comments">
            @Html.Action("Get", "Comment", new { postId = Model.Id })
        </div>
        @if (@Html.IsLogged())
        {
            <div>
                @using (Ajax.BeginForm(ajaxOptions))
                {
                    <div class="container">
                        <div>
                            <br style="clear: both">
                            <div class="form-group col-md-4 ">
                                <label id="messageLabel" for="message">Dodaj komentarz</label>
                                <textarea class="form-control input-sm " type="textarea" id="message" placeholder="Message" maxlength="300" rows="7" name="Message"></textarea>
                                <span class="help-block"><p id="characterLeft" class="help-block ">You have reached the limit</p></span>
                            </div>
                            <br style="clear: both">
                            <div class="form-group col-md-2">
                                <button class="form-control input-sm btn btn-success disabled" id="btnSubmit" name="btnSubmit" type="submit" style="height: 35px"> Send</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>